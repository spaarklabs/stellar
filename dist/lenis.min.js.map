{"version":3,"file":"lenis.min.js","sources":["../../src/maths.ts","../../src/animate.ts","../../src/dimensions.ts","../../src/debounce.ts","../../src/emitter.ts","../../src/virtual-scroll.ts","../../src/index.ts"],"sourcesContent":["/**\r\n * Clamp a value between a minimum and maximum value\r\n *\r\n * @param min Minimum value\r\n * @param input Value to clamp\r\n * @param max Maximum value\r\n * @returns Clamped value\r\n */\r\nexport function clamp(min: number, input: number, max: number) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n/**\r\n * Truncate a floating-point number to a specified number of decimal places\r\n *\r\n * @param value Value to truncate\r\n * @param decimals Number of decimal places to truncate to\r\n * @returns Truncated value\r\n */\r\nexport function truncate(value: number, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n/**\r\n *  Linearly interpolate between two values using an amount (0 <= t <= 1)\r\n *\r\n * @param x First value\r\n * @param y Second value\r\n * @param t Amount to interpolate (0 <= t <= 1)\r\n * @returns Interpolated value\r\n */\r\nexport function lerp(x: number, y: number, t: number) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n/**\r\n * Damp a value over time using a damping factor\r\n * {@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}\r\n *\r\n * @param x Initial value\r\n * @param y Target value\r\n * @param lambda Damping factor\r\n * @param dt Time elapsed since the last update\r\n * @returns Damped value\r\n */\r\nexport function damp(x: number, y: number, lambda: number, deltaTime: number) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * deltaTime))\r\n}\r\n\r\n/**\r\n * Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n * {@link https://anguscroll.com/just/just-modulo}\r\n *\r\n * @param n Dividend\r\n * @param d Divisor\r\n * @returns Modulo\r\n */\r\nexport function modulo(n: number, d: number) {\r\n  return ((n % d) + d) % d\r\n}\r\n\r\n/*\r\n  These functions are from framer-motion https://github.com/framer/motion, modified a bit.\r\n\r\n  Original: packages/framer-motion/src/easing/cubic-bezier.ts\r\n  https://github.com/framer/motion/blob/main/packages/framer-motion/src/easing/cubic-bezier.ts\r\n  \r\n*/\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nconst calcBezier = (t: number, a1: number, a2: number) =>\r\n  (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t\r\nconst subdivisionPrecision = 0.0000001\r\nconst subdivisionMaxIterations = 12\r\nfunction binarySubdivide(\r\n  x: number,\r\n  lowerBound: number,\r\n  upperBound: number,\r\n  mX1: number,\r\n  mX2: number\r\n) {\r\n  let currentX\r\n  let currentT\r\n  let i = 0\r\n  do {\r\n    currentT = lowerBound + (upperBound - lowerBound) / 2.0\r\n    currentX = calcBezier(currentT, mX1, mX2) - x\r\n    if (currentX > 0.0) {\r\n      upperBound = currentT\r\n    } else {\r\n      lowerBound = currentT\r\n    }\r\n  } while (\r\n    Math.abs(currentX) > subdivisionPrecision &&\r\n    ++i < subdivisionMaxIterations\r\n  )\r\n  return currentT\r\n}\r\nexport function cubicBezier(input: number[]) {\r\n  // If this is a linear gradient, return linear easing\r\n  if (input[0] === input[1] && input[2] === input[3]) return noop\r\n  const getTForX = (aX: number) => binarySubdivide(aX, 0, 1, input[0], input[2])\r\n  // If animation is at start/end, return t without easing\r\n  return (t: number) =>\r\n    t === 0 || t === 1 ? t : calcBezier(getTForX(t), input[1], input[3])\r\n}\r\n\r\nexport const noop = <T>(any: T): T => any\r\n","import { clamp, damp } from './maths'\r\nimport type { EasingFunction, FromToOptions, OnUpdateCallback } from './types'\r\n\r\n/**\r\n * Animate class to handle value animations with lerping or easing\r\n *\r\n * @example\r\n * const animate = new Animate()\r\n * animate.fromTo(0, 100, { duration: 1, easing: (t) => t })\r\n * animate.advance(0.5) // 50\r\n */\r\nexport class Animate {\r\n  isRunning = false\r\n  value = 0\r\n  from = 0\r\n  to = 0\r\n  currentTime = 0\r\n\r\n  // These are instanciated in the fromTo method\r\n  lerp?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  onUpdate?: OnUpdateCallback\r\n\r\n  /**\r\n   * Advance the animation by the given delta time\r\n   *\r\n   * @param deltaTime - The time in seconds to advance the animation\r\n   */\r\n  advance(deltaTime: number) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.duration && this.easing) {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    } else if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      // If no easing or lerp, just jump to the end value\r\n      this.value = this.to\r\n      completed = true\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  /** Stop the animation */\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  /**\r\n   * Set up the animation from a starting value to an ending value\r\n   * with optional parameters for lerping, duration, easing, and onUpdate callback\r\n   *\r\n   * @param from - The starting value\r\n   * @param to - The ending value\r\n   * @param options - Options for the animation\r\n   */\r\n  fromTo(\r\n    from: number,\r\n    to: number,\r\n    { lerp, duration, easing, onStart, onUpdate }: FromToOptions\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\n/**\r\n * Dimensions class to handle the size of the content and wrapper\r\n *\r\n * @example\r\n * const dimensions = new Dimensions(wrapper, content)\r\n * dimensions.on('resize', (e) => {\r\n *   console.log(e.width, e.height)\r\n * })\r\n */\r\nexport class Dimensions {\r\n  width = 0\r\n  height = 0\r\n  scrollHeight = 0\r\n  scrollWidth = 0\r\n\r\n  // These are instanciated in the constructor as they need information from the options\r\n  private debouncedResize?: (...args: unknown[]) => void\r\n  private wrapperResizeObserver?: ResizeObserver\r\n  private contentResizeObserver?: ResizeObserver\r\n\r\n  constructor(\r\n    private wrapper: HTMLElement | Window,\r\n    private content: HTMLElement,\r\n    { autoResize = true, debounce: debounceValue = 250 } = {}\r\n  ) {\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper instanceof Window) {\r\n        window.addEventListener('resize', this.debouncedResize, false)\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n\r\n    if (this.wrapper === window && this.debouncedResize) {\r\n      window.removeEventListener('resize', this.debouncedResize, false)\r\n    }\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper instanceof Window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper instanceof Window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce<CB extends (...args: any[]) => void>(\r\n  callback: CB,\r\n  delay: number\r\n) {\r\n  let timer: number | undefined\r\n  return function <T>(this: T, ...args: Parameters<typeof callback>) {\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      timer = undefined\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","/**\r\n * Emitter class to handle events\r\n * @example\r\n * const emitter = new Emitter()\r\n * emitter.on('event', (data) => {\r\n *   console.log(data)\r\n * })\r\n * emitter.emit('event', 'data')\r\n */\r\nexport class Emitter {\r\n  private events: Record<\r\n    string,\r\n    Array<(...args: unknown[]) => void> | undefined\r\n  > = {}\r\n\r\n  /**\r\n   * Emit an event with the given data\r\n   * @param event Event name\r\n   * @param args Data to pass to the event handlers\r\n   */\r\n  emit(event: string, ...args: unknown[]) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i]?.(...args)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a callback to the event\r\n   * @param event Event name\r\n   * @param cb Callback function\r\n   * @returns Unsubscribe function\r\n   */\r\n  on<CB extends (...args: any[]) => void>(event: string, cb: CB) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a callback from the event\r\n   * @param event Event name\r\n   * @param callback Callback function\r\n   */\r\n  off<CB extends (...args: any[]) => void>(event: string, callback: CB) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  /**\r\n   * Remove all event listeners and clean up\r\n   */\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\nimport { VirtualScrollCallback } from './types'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\nconst listenerOptions: AddEventListenerOptions = { passive: false }\r\n\r\nexport class VirtualScroll {\r\n  touchStart = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  lastDelta = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  window = {\r\n    width: 0,\r\n    height: 0,\r\n  }\r\n  private emitter = new Emitter()\r\n\r\n  constructor(\r\n    private element: HTMLElement,\r\n    private options = { wheelMultiplier: 1, touchMultiplier: 1 }\r\n  ) {\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, listenerOptions)\r\n    this.element.addEventListener(\r\n      'touchstart',\r\n      this.onTouchStart,\r\n      listenerOptions\r\n    )\r\n    this.element.addEventListener(\r\n      'touchmove',\r\n      this.onTouchMove,\r\n      listenerOptions\r\n    )\r\n    this.element.addEventListener('touchend', this.onTouchEnd, listenerOptions)\r\n  }\r\n\r\n  /**\r\n   * Add an event listener for the given event and callback\r\n   *\r\n   * @param event Event name\r\n   * @param callback Callback function\r\n   */\r\n  on(event: string, callback: VirtualScrollCallback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  /** Remove all event listeners and clean up */\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, listenerOptions)\r\n    this.element.removeEventListener(\r\n      'touchstart',\r\n      this.onTouchStart,\r\n      listenerOptions\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchmove',\r\n      this.onTouchMove,\r\n      listenerOptions\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchend',\r\n      this.onTouchEnd,\r\n      listenerOptions\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Event handler for 'touchstart' event\r\n   *\r\n   * @param event Touch event\r\n   */\r\n  onTouchStart = (event: TouchEvent) => {\r\n    // @ts-expect-error - event.targetTouches is not defined\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  /** Event handler for 'touchmove' event */\r\n  onTouchMove = (event: TouchEvent) => {\r\n    // @ts-expect-error - event.targetTouches is not defined\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.options.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.options.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event: TouchEvent) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  /** Event handler for 'wheel' event */\r\n  onWheel = (event: WheelEvent) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.width : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.height : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.options.wheelMultiplier\r\n    deltaY *= this.options.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.window = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    }\r\n  }\r\n}\r\n","import { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, cubicBezier, modulo } from './maths'\r\nimport type {\r\n  LenisEvent,\r\n  LenisOptions,\r\n  ScrollCallback,\r\n  Scrolling,\r\n  ScrollToOptions,\r\n  UserData,\r\n  VirtualScrollCallback,\r\n  VirtualScrollData,\r\n} from './types'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Types\r\nexport * from './types'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype OptionalPick<T, F extends keyof T> = Omit<T, F> & Partial<Pick<T, F>>\r\n\r\nexport default class Lenis {\r\n  private _isScrolling: Scrolling = false // true when scroll is animating\r\n  private _isStopped = false // true if user should not be able to scroll - enable/disable programmatically\r\n  private _isLocked = false // same as isStopped but enabled/disabled when scroll reaches target\r\n  private _preventNextNativeScrollEvent = false\r\n  private _resetVelocityTimeout: number | null = null\r\n\r\n  /**\r\n   * Whether or not the user is touching the screen\r\n   */\r\n  isTouching?: boolean\r\n  /**\r\n   * The time in ms since the lenis instance was created\r\n   */\r\n  time = 0\r\n  /**\r\n   * User data that will be forwarded through the scroll event\r\n   *\r\n   * @example\r\n   * lenis.scrollTo(100, {\r\n   *   userData: {\r\n   *     foo: 'bar'\r\n   *   }\r\n   * })\r\n   */\r\n  userData: UserData = {}\r\n  /**\r\n   * The last velocity of the scroll\r\n   */\r\n  lastVelocity = 0\r\n  /**\r\n   * The current velocity of the scroll\r\n   */\r\n  velocity = 0\r\n  /**\r\n   * The direction of the scroll\r\n   */\r\n  direction: 1 | -1 | 0 = 0\r\n  /**\r\n   * The options passed to the lenis instance\r\n   */\r\n  options: OptionalPick<\r\n    Required<LenisOptions>,\r\n    'duration' | 'prevent' | 'virtualScroll'\r\n  >\r\n  /**\r\n   * The target scroll value\r\n   */\r\n  targetScroll: number\r\n  /**\r\n   * The animated scroll value\r\n   */\r\n  animatedScroll: number\r\n\r\n  // These are instanciated here as they don't need information from the options\r\n  private readonly animate = new Animate()\r\n  private readonly emitter = new Emitter()\r\n  // These are instanciated in the constructor as they need information from the options\r\n  readonly dimensions: Dimensions // This is not private because it's used in the Snap class\r\n  private readonly virtualScroll: VirtualScroll\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    eventsTarget = wrapper,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    prevent,\r\n    virtualScroll,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    // Check if wrapper is html or body, fallback to window\r\n    if (\r\n      !wrapper ||\r\n      wrapper === document.documentElement ||\r\n      wrapper === document.body\r\n    ) {\r\n      wrapper = window\r\n    }\r\n\r\n    // Setup options\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      prevent,\r\n      virtualScroll,\r\n      __experimental__naiveDimensions,\r\n    }\r\n\r\n    // Setup dimensions instance\r\n    this.dimensions = new Dimensions(wrapper, content, { autoResize })\r\n\r\n    // Setup class name\r\n    this.updateClassName()\r\n\r\n    // Set the initial scroll value for all scroll information\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    // Add event listeners\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.options.wrapper.addEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    // Setup virtual scroll instance\r\n    this.virtualScroll = new VirtualScroll(eventsTarget as HTMLElement, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  /**\r\n   * Destroy the lenis instance, remove all event listeners and clean up the class name\r\n   */\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n    this.options.wrapper.removeEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.cleanUpClassName()\r\n  }\r\n\r\n  /**\r\n   * Add an event listener for the given event and callback\r\n   *\r\n   * @param event Event name\r\n   * @param callback Callback function\r\n   * @returns Unsubscribe function\r\n   */\r\n  on(event: 'scroll', callback: ScrollCallback): () => void\r\n  on(event: 'virtual-scroll', callback: VirtualScrollCallback): () => void\r\n  on(event: LenisEvent, callback: any) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener for the given event and callback\r\n   *\r\n   * @param event Event name\r\n   * @param callback Callback function\r\n   */\r\n  off(event: 'scroll', callback: ScrollCallback): void\r\n  off(event: 'virtual-scroll', callback: VirtualScrollCallback): void\r\n  off(event: LenisEvent, callback: any) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll: number) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\r\n    if (event.button === 1) {\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = (data: VirtualScrollData) => {\r\n    if (\r\n      typeof this.options.virtualScroll === 'function' &&\r\n      this.options.virtualScroll(data) === false\r\n    )\r\n      return\r\n\r\n    const { deltaX, deltaY, event } = data\r\n\r\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\r\n\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\r\n    // if (event.type === 'touchend') {\r\n    //   console.log('touchend', this.scroll)\r\n    //   // this.lastVelocity = this.velocity\r\n    //   // this.velocity = 0\r\n    //   // this.isScrolling = false\r\n    //   this.emit({ type: 'touchend' })\r\n    //   // alert('touchend')\r\n    //   return\r\n    // }\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    const prevent = this.options.prevent\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node instanceof HTMLElement &&\r\n          ((typeof prevent === 'function' && prevent?.(node)) ||\r\n            node.hasAttribute?.('data-lenis-prevent') ||\r\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n            (node.classList?.contains('lenis') &&\r\n              !node.classList?.contains('lenis-stopped'))) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    const isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!isSmooth) {\r\n      this.isScrolling = 'native'\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Force lenis to recalculate the dimensions\r\n   */\r\n  resize() {\r\n    this.dimensions.resize()\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.emit()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    if (this._resetVelocityTimeout !== null) {\r\n      clearTimeout(this._resetVelocityTimeout)\r\n      this._resetVelocityTimeout = null\r\n    }\r\n\r\n    if (this._preventNextNativeScrollEvent) {\r\n      this._preventNextNativeScrollEvent = false\r\n      return\r\n    }\r\n\r\n    if (this.isScrolling === false || this.isScrolling === 'native') {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.lastVelocity = this.velocity\r\n      this.velocity = this.animatedScroll - lastScroll\r\n      this.direction = Math.sign(\r\n        this.animatedScroll - lastScroll\r\n      ) as Lenis['direction']\r\n      this.isScrolling = 'native'\r\n      this.emit()\r\n\r\n      if (this.velocity !== 0) {\r\n        this._resetVelocityTimeout = setTimeout(() => {\r\n          this.lastVelocity = this.velocity\r\n          this.velocity = 0\r\n          this.isScrolling = false\r\n          this.emit()\r\n        }, 400)\r\n      }\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.lastVelocity = this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  /**\r\n   * Start lenis scroll after it has been stopped\r\n   */\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  /**\r\n   * Stop lenis scroll\r\n   */\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  /**\r\n   * RequestAnimationFrame for lenis\r\n   *\r\n   * @param time The time in ms from an external clock like `requestAnimationFrame` or Tempus\r\n   */\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  /**\r\n   * Scroll to a target value\r\n   *\r\n   * @param target The target value to scroll to\r\n   * @param options The options for the scroll\r\n   *\r\n   * @example\r\n   * lenis.scrollTo(100, {\r\n   *   offset: 100,\r\n   *   duration: 1,\r\n   *   easing: (t) => 1 - Math.cos((t * Math.PI) / 2),\r\n   *   lerp: 0.1,\r\n   *   onStart: () => {\r\n   *     console.log('onStart')\r\n   *   },\r\n   *   onComplete: (lenis, changed) => {\r\n   *     console.log('onComplete', changed)\r\n   *   },\r\n   * })\r\n   */\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      ease,\r\n      easing = this.options.easing,\r\n      lerp = this.options.lerp,\r\n      onStart,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n      userData,\r\n    }: ScrollToOptions = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (\r\n      typeof target === 'string' &&\r\n      ['top', 'left', 'start'].includes(target)\r\n    ) {\r\n      target = 0\r\n    } else if (\r\n      typeof target === 'string' &&\r\n      ['bottom', 'right', 'end'].includes(target)\r\n    ) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target instanceof HTMLElement && target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.rootElement.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (target === this.targetScroll) {\r\n      onStart?.(this)\r\n      onComplete?.(this, false);\r\n      return\r\n    }\r\n\r\n    this.userData = userData ?? {}\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.preventNextNativeScrollEvent()\r\n      this.emit()\r\n      onComplete?.(this, true)\r\n      this.userData = {}\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing: ease ? cubicBezier(ease) : easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = 'smooth'\r\n        onStart?.(this)\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = 'smooth'\r\n\r\n        // updated\r\n        this.lastVelocity = this.velocity\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this, true)\r\n          this.userData = {}\r\n          // avoid emitting event twice\r\n          this.preventNextNativeScrollEvent()\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  private preventNextNativeScrollEvent() {\r\n    this._preventNextNativeScrollEvent = true\r\n\r\n    requestAnimationFrame(() => {\r\n      this._preventNextNativeScrollEvent = false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * The root element on which lenis is instanced\r\n   */\r\n  get rootElement() {\r\n    return (\r\n      this.options.wrapper === window\r\n        ? document.documentElement\r\n        : this.options.wrapper\r\n    ) as HTMLElement\r\n  }\r\n\r\n  /**\r\n   * The limit which is the maximum scroll value\r\n   */\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether or not the scroll is horizontal\r\n   */\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  /**\r\n   * The actual scroll value\r\n   */\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  /**\r\n   * The current scroll value\r\n   */\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  /**\r\n   * The progress of the scroll relative to the limit\r\n   */\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  /**\r\n   * Current scroll state\r\n   */\r\n  get isScrolling() {\r\n    return this._isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: Scrolling) {\r\n    if (this._isScrolling !== value) {\r\n      this._isScrolling = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if lenis is stopped\r\n   */\r\n  get isStopped() {\r\n    return this._isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this._isStopped !== value) {\r\n      this._isStopped = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if lenis is locked\r\n   */\r\n  get isLocked() {\r\n    return this._isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this._isLocked !== value) {\r\n      this._isLocked = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if lenis is smooth scrolling\r\n   */\r\n  get isSmooth() {\r\n    return this.isScrolling === 'smooth'\r\n  }\r\n\r\n  /**\r\n   * The class name applied to the wrapper element\r\n   */\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private updateClassName() {\r\n    this.cleanUpClassName()\r\n\r\n    this.rootElement.className =\r\n      `${this.rootElement.className} ${this.className}`.trim()\r\n  }\r\n\r\n  private cleanUpClassName() {\r\n    this.rootElement.className = this.rootElement.className\r\n      .replace(/lenis(-\\w+)?/g, '')\r\n      .trim()\r\n  }\r\n}\r\n"],"names":["clamp","min","input","max","Math","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","noop","getTForX","aX","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","i","abs","any","Animate","constructor","this","isRunning","value","from","to","currentTime","advance","deltaTime","completed","duration","easing","linearProgress","easedProgress","lerp","damp","y","lambda","exp","round","stop","_a","onUpdate","call","fromTo","onStart","Dimensions","wrapper","content","autoResize","debounce","debounceValue","width","height","scrollHeight","scrollWidth","resize","onWrapperResize","onContentResize","Window","window","innerWidth","innerHeight","clientWidth","clientHeight","debouncedResize","callback","delay","timer","args","context","clearTimeout","setTimeout","undefined","apply","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","disconnect","_b","removeEventListener","limit","Emitter","events","emit","event","callbacks","length","on","cb","push","filter","off","LINE_HEIGHT","listenerOptions","passive","VirtualScroll","element","options","wheelMultiplier","touchMultiplier","touchStart","lastDelta","emitter","onTouchStart","clientX","clientY","targetTouches","deltaX","deltaY","onTouchMove","onTouchEnd","onWheel","deltaMode","onWindowResize","Lenis","document","documentElement","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","infinite","orientation","gestureOrientation","prevent","virtualScroll","__experimental__naiveDimensions","_isScrolling","_isStopped","_isLocked","_preventNextNativeScrollEvent","_resetVelocityTimeout","time","userData","lastVelocity","velocity","direction","animate","onPointerDown","button","reset","onVirtualScroll","data","ctrlKey","isTouch","type","includes","isWheel","isTouching","isStopped","isLocked","isClick","isUnknownGesture","composedPath","slice","indexOf","rootElement","find","node","HTMLElement","hasAttribute","_c","classList","_d","contains","_e","preventDefault","isScrolling","delta","hasTouchInertia","scrollTo","targetScroll","Object","assign","programmatic","onNativeScroll","lastScroll","animatedScroll","actualScroll","sign","body","dimensions","updateClassName","cleanUpClassName","setScroll","scroll","isHorizontal","scrollLeft","scrollTop","start","raf","target","offset","immediate","lock","ease","onComplete","force","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","preventNextNativeScrollEvent","requestAnimationFrame","modulo","n","d","progress","isSmooth","className","trim","replace"],"mappings":"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"}